[debug] [zinc] IncrementalCompile -----------
[debug] IncrementalCompile.incrementalCompile
[debug] previous = Stamps for: 146 products, 38 sources, 4 libraries
[debug] current source = Set(${BASE}/src/main/scala/Generate/Top.scala, ${BASE}/src/main/scala/core/config/SignalType.scala, ${BASE}/src/main/scala/configs/BoardConfig.scala, ${BASE}/src/main/scala/utils/ExtendEnum.scala, ${BASE}/src/main/scala/utils/Utils.scala, ${BASE}/src/main/scala/Generate/ClockSeparator.scala, ${BASE}/src/main/scala/configs/GenConfig.scala, ${BASE}/src/main/scala/core/writeBack/AUSelector.scala, ${BASE}/src/main/scala/core/execute/NextPCGen.scala, ${BASE}/src/main/scala/core/CoreTop.scala, ${BASE}/src/main/scala/core/config/DebugIO.scala, ${BASE}/src/main/scala/core/memory/MemWriteSelector.scala, ${BASE}/src/main/scala/core/decode/InstructionDecoder.scala, ${BASE}/src/main/scala/core/CPUState.scala, ${BASE}/src/main/scala/Generate/Debounce.scala, ${BASE}/src/main/scala/core/execute/ALU.scala, ${BASE}/src/main/scala/core/execute/OperandSelector.scala, ${BASE}/src/main/scala/device/Seg7.scala, ${BASE}/src/main/scala/device/Button.scala, ${BASE}/src/main/scala/core/memory/UARTLoader.scala, ${BASE}/src/main/scala/core/memory/InsRAM.scala, ${BASE}/src/main/scala/utils/MemoryPacket.scala, ${BASE}/src/main/scala/core/execute/Registers.scala, ${BASE}/src/main/scala/core/memory/MemoryDispatch.scala, ${BASE}/src/main/scala/configs/MMIOConfig.scala, ${BASE}/src/main/scala/core/decode/ControlUnit.scala, ${BASE}/src/main/scala/core/writeBack/WriteDataSelector.scala, ${BASE}/src/main/scala/core/memory/DataRAM.scala, ${BASE}/src/main/scala/utils/UARTModule.scala, ${BASE}/src/main/scala/device/DeviceTop.scala, ${BASE}/src/main/scala/core/execute/ImmGen.scala, ${BASE}/src/main/scala/core/config/CoreConfig.scala, ${BASE}/src/main/scala/core/insFetch/PC.scala, ${BASE}/src/main/scala/core/memory/OutRegisters.scala, ${BASE}/src/main/scala/device/Switches.scala, ${BASE}/src/main/scala/core/execute/CMP.scala, ${BASE}/src/main/scala/device/UARTWrapper.scala, ${BASE}/src/main/scala/device/Led.scala)
[debug] > initialChanges = InitialChanges(Changes(added = Set(${BASE}/src/main/scala/device/UARTWrapper.scala), removed = Set(${BASE}/src/main/scala/device/UART.scala), changed = Set(${BASE}/src/main/scala/core/memory/MemoryDispatch.scala, ${BASE}/src/main/scala/configs/BoardConfig.scala, ${BASE}/src/main/scala/core/CoreTop.scala, ${BASE}/src/main/scala/device/DeviceTop.scala, ${BASE}/src/main/scala/configs/GenConfig.scala), unmodified = ...),Set(${BASE}/target/scala-2.12/classes/configs/GenConfig$.class, ${BASE}/target/scala-2.12/classes/core/memory/MemoryDispatch.class, ${BASE}/target/scala-2.12/classes/core/CoreTop$delayedInit$body.class, ${BASE}/target/scala-2.12/classes/device/UART_IP$$anon$2.class, ${BASE}/target/scala-2.12/classes/core/CoreTop.class, ${BASE}/target/scala-2.12/classes/device/UART.class, ${BASE}/target/scala-2.12/classes/core/memory/MemoryDispatch$.class, ${BASE}/target/scala-2.12/classes/core/memory/MemoryDispatch$delayedInit$body.class, ${BASE}/target/scala-2.12/classes/configs/BoardConfig$.class, ${BASE}/target/scala-2.12/classes/device/DeviceTop.class, ${BASE}/target/scala-2.12/classes/device/UART$$anon$1.class, ${BASE}/target/scala-2.12/classes/core/CoreTop$.class, ${BASE}/target/scala-2.12/classes/device/UART_IP.class, ${BASE}/target/scala-2.12/classes/device/MMIOUARTBundle.class, ${BASE}/target/scala-2.12/classes/device/BoardUARTBundle.class),Set(),API Changes: Set())
[debug] 
[debug] Initial source changes:
[debug] 	removed: Set(${BASE}/src/main/scala/device/UART.scala)
[debug] 	added: Set(${BASE}/src/main/scala/device/UARTWrapper.scala)
[debug] 	modified: Set(${BASE}/src/main/scala/configs/BoardConfig.scala, ${BASE}/src/main/scala/configs/GenConfig.scala, ${BASE}/src/main/scala/core/CoreTop.scala, ${BASE}/src/main/scala/core/memory/MemoryDispatch.scala, ${BASE}/src/main/scala/device/DeviceTop.scala)
[debug] Invalidated products: Set(${BASE}/target/scala-2.12/classes/configs/GenConfig$.class, ${BASE}/target/scala-2.12/classes/core/memory/MemoryDispatch.class, ${BASE}/target/scala-2.12/classes/core/CoreTop$delayedInit$body.class, ${BASE}/target/scala-2.12/classes/device/UART_IP$$anon$2.class, ${BASE}/target/scala-2.12/classes/core/CoreTop.class, ${BASE}/target/scala-2.12/classes/device/UART.class, ${BASE}/target/scala-2.12/classes/core/memory/MemoryDispatch$.class, ${BASE}/target/scala-2.12/classes/core/memory/MemoryDispatch$delayedInit$body.class, ${BASE}/target/scala-2.12/classes/configs/BoardConfig$.class, ${BASE}/target/scala-2.12/classes/device/DeviceTop.class, ${BASE}/target/scala-2.12/classes/device/UART$$anon$1.class, ${BASE}/target/scala-2.12/classes/core/CoreTop$.class, ${BASE}/target/scala-2.12/classes/device/UART_IP.class, ${BASE}/target/scala-2.12/classes/device/MMIOUARTBundle.class, ${BASE}/target/scala-2.12/classes/device/BoardUARTBundle.class)
[debug] External API changes: API Changes: Set()
[debug] Modified binary dependencies: Set()
[debug] Initial directly invalidated classes: Set(device.BoardBundle, device.UART_IP, device.MMIOUARTBundle, core.CoreTop, device.UART, device.DeviceTop, device.MMIOOutBundle, configs.BoardConfig, core.memory.OutRegisters, device.BoardUARTBundle, core.memory.MemoryDispatch, device.ExternalSignalBundle, configs.GenConfig)
[debug] Sources indirectly invalidated by:
[debug] 	product: Set(${BASE}/src/main/scala/configs/BoardConfig.scala, ${BASE}/src/main/scala/configs/GenConfig.scala, ${BASE}/src/main/scala/core/CoreTop.scala, ${BASE}/src/main/scala/core/memory/MemoryDispatch.scala, ${BASE}/src/main/scala/device/UART.scala, ${BASE}/src/main/scala/device/DeviceTop.scala)
[debug] 	binary dep: Set()
[debug] 	external source: Set()
[debug] All initially invalidated classes: Set(device.BoardBundle, device.UART_IP, device.MMIOUARTBundle, core.CoreTop, device.UART, device.DeviceTop, device.MMIOOutBundle, configs.BoardConfig, core.memory.OutRegisters, device.BoardUARTBundle, core.memory.MemoryDispatch, device.ExternalSignalBundle, configs.GenConfig)
[debug] All initially invalidated sources:Set(${BASE}/src/main/scala/configs/BoardConfig.scala, ${BASE}/src/main/scala/configs/GenConfig.scala, ${BASE}/src/main/scala/core/CoreTop.scala, ${BASE}/src/main/scala/core/memory/MemoryDispatch.scala, ${BASE}/src/main/scala/device/UART.scala, ${BASE}/src/main/scala/device/DeviceTop.scala, ${BASE}/src/main/scala/device/UARTWrapper.scala)
[debug] Initial set of included nodes: device.BoardBundle, device.UART_IP, device.MMIOUARTBundle, core.CoreTop, device.UART, device.DeviceTop, device.MMIOOutBundle, configs.BoardConfig, core.memory.OutRegisters, device.BoardUARTBundle, core.memory.MemoryDispatch, device.ExternalSignalBundle, configs.GenConfig
[debug] compilation cycle 1
[info] compiling 7 Scala sources to D:\ComputerScience\Projects\CPUdemo\hardware\target\scala-2.12\classes ...
[debug] Getting org.scala-sbt:compiler-bridge_2.12:1.9.5:compile for Scala 2.12.12
[debug] [zinc] Running cached compiler 7240bb3d for Scala compiler version 2.12.12
[debug] [zinc] The Scala compiler is invoked with:
[debug] 	-Xplugin:C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\edu\berkeley\cs\chisel3-plugin_2.12.12\3.5.4\chisel3-plugin_2.12.12-3.5.4.jar
[debug] 	-bootclasspath
[debug] 	C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.12.12\scala-library-2.12.12.jar
[debug] 	-classpath
[debug] 	D:\ComputerScience\Projects\CPUdemo\hardware\target\scala-2.12\classes;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\edu\berkeley\cs\chisel3_2.12\3.5.4\chisel3_2.12-3.5.4.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\edu\berkeley\cs\chisel3-macros_2.12\3.5.4\chisel3-macros_2.12-3.5.4.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\edu\berkeley\cs\chisel3-core_2.12\3.5.4\chisel3-core_2.12-3.5.4.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-reflect\2.12.12\scala-reflect-2.12.12.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\os-lib_2.12\0.8.0\os-lib_2.12-0.8.0.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\edu\berkeley\cs\firrtl_2.12\1.5.4\firrtl_2.12-1.5.4.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\geny_2.12\0.7.0\geny_2.12-0.7.0.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\antlr\antlr4-runtime\4.9.3\antlr4-runtime-4.9.3.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\google\protobuf\protobuf-java\3.18.0\protobuf-java-3.18.0.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\github\scopt\scopt_2.12\3.7.1\scopt_2.12-3.7.1.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\net\jcazevedo\moultingyaml_2.12\0.4.2\moultingyaml_2.12-0.4.2.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\json4s\json4s-native_2.12\3.6.12\json4s-native_2.12-3.6.12.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\apache\commons\commons-text\1.9\commons-text-1.9.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\io\github\alexarchambault\data-class_2.12\0.2.5\data-class_2.12-0.2.5.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\github\nscala-time\nscala-time_2.12\2.22.0\nscala-time_2.12-2.22.0.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\json4s\json4s-core_2.12\3.6.12\json4s-core_2.12-3.6.12.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\apache\commons\commons-lang3\3.11\commons-lang3-3.11.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\joda-time\joda-time\2.10.1\joda-time-2.10.1.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\joda\joda-convert\2.2.0\joda-convert-2.2.0.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\json4s\json4s-ast_2.12\3.6.12\json4s-ast_2.12-3.6.12.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\json4s\json4s-scalap_2.12\3.6.12\json4s-scalap_2.12-3.6.12.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\thoughtworks\paranamer\paranamer\2.8\paranamer-2.8.jar
[debug] Invalidating (transitively) by inheritance from device.UART...
[debug] Initial set of included nodes: device.UART
[debug] Invalidated by transitive inheritance dependency: Set(device.UART)
[debug] Change NamesChange(device.UART,ModifiedNames(changes = UsedName(reifyTarget,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(_computeName,[Default]), UsedName(_component,[Default]), UsedName(notifyAll,[Default]), UsedName(device;UART;init;,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(parentModName,[Default]), UsedName(getIds,[Default]), UsedName(nameIds,[Default]), UsedName(namePorts,[Default]), UsedName(_suggestNameCheck,[Default]), UsedName(toNamed,[Default]), UsedName(synchronized,[Default]), UsedName($init$,[Default]), UsedName(finalize,[Default]), UsedName(_namespace,[Default]), UsedName(clock,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getModulePorts,[Default]), UsedName(addId,[Default]), UsedName(parentPathName,[Default]), UsedName(generateComponent,[Default]), UsedName(instanceName,[Default]), UsedName(override_clock,[Default]), UsedName(setRef,[Default]), UsedName(board,[Default]), UsedName(hasSeed,[Default]), UsedName(getRef,[Default]), UsedName(portsSize,[Default]), UsedName(_closed,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(mkReset,[Default]), UsedName(_id,[Default]), UsedName(hashCode,[Default]), UsedName(_lastId,[Default]), UsedName(findPort,[Default]), UsedName(getPublicFields,[Default]), UsedName(notify,[Default]), UsedName(isClosed,[Default]), UsedName(clone,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(reifyParent,[Default]), UsedName(seedOpt,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(addCommand,[Default]), UsedName(_onModuleClose,[Default]), UsedName(_parent,[Default]), UsedName(reset,[Default]), UsedName(toTarget,[Default]), UsedName(getChiselPorts,[Default]), UsedName(initializeInParent,[Default]), UsedName(getCommands,[Default]), UsedName(mmio,[Default]), UsedName(circuitName,[Default]), UsedName(getOptionRef,[Default]), UsedName(forceName,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(eq,[Default]), UsedName(override_reset_=,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(autoSeed,[Default]), UsedName(UART,[Default]), UsedName(portsContains,[Default]), UsedName(_circuit,[Default]), UsedName(name,[Default]), UsedName(compileOptions,[Default]), UsedName(override_reset,[Default]), UsedName(!=,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(forceFinalName,[Default]), UsedName(suggestName,[Default]), UsedName(override_clock_=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(IO,[Default]), UsedName(getTarget,[Default]), UsedName(io,[Default]), UsedName(desiredName,[Default]), UsedName(pathName,[Default]), UsedName(getPorts,[Default]), UsedName(wait,[Default]), UsedName(equals,[Default]))) invalidates 1 classes due to The device.UART has the following regular definitions changed:
[debug] 	UsedName(reifyTarget,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(_computeName,[Default]), UsedName(_component,[Default]), UsedName(notifyAll,[Default]), UsedName(device;UART;init;,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(parentModName,[Default]), UsedName(getIds,[Default]), UsedName(nameIds,[Default]), UsedName(namePorts,[Default]), UsedName(_suggestNameCheck,[Default]), UsedName(toNamed,[Default]), UsedName(synchronized,[Default]), UsedName($init$,[Default]), UsedName(finalize,[Default]), UsedName(_namespace,[Default]), UsedName(clock,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getModulePorts,[Default]), UsedName(addId,[Default]), UsedName(parentPathName,[Default]), UsedName(generateComponent,[Default]), UsedName(instanceName,[Default]), UsedName(override_clock,[Default]), UsedName(setRef,[Default]), UsedName(board,[Default]), UsedName(hasSeed,[Default]), UsedName(getRef,[Default]), UsedName(portsSize,[Default]), UsedName(_closed,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(mkReset,[Default]), UsedName(_id,[Default]), UsedName(hashCode,[Default]), UsedName(_lastId,[Default]), UsedName(findPort,[Default]), UsedName(getPublicFields,[Default]), UsedName(notify,[Default]), UsedName(isClosed,[Default]), UsedName(clone,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(reifyParent,[Default]), UsedName(seedOpt,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(addCommand,[Default]), UsedName(_onModuleClose,[Default]), UsedName(_parent,[Default]), UsedName(reset,[Default]), UsedName(toTarget,[Default]), UsedName(getChiselPorts,[Default]), UsedName(initializeInParent,[Default]), UsedName(getCommands,[Default]), UsedName(mmio,[Default]), UsedName(circuitName,[Default]), UsedName(getOptionRef,[Default]), UsedName(forceName,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(eq,[Default]), UsedName(override_reset_=,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(autoSeed,[Default]), UsedName(UART,[Default]), UsedName(portsContains,[Default]), UsedName(_circuit,[Default]), UsedName(name,[Default]), UsedName(compileOptions,[Default]), UsedName(override_reset,[Default]), UsedName(!=,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(forceFinalName,[Default]), UsedName(suggestName,[Default]), UsedName(override_clock_=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(IO,[Default]), UsedName(getTarget,[Default]), UsedName(io,[Default]), UsedName(desiredName,[Default]), UsedName(pathName,[Default]), UsedName(getPorts,[Default]), UsedName(wait,[Default]), UsedName(equals,[Default]).
[debug]   > by transitive inheritance: Set(device.UART)
[debug]   > 
[debug]   > 
[debug]         
[debug] Invalidating (transitively) by inheritance from device.DeviceTop...
[debug] Initial set of included nodes: device.DeviceTop
[debug] Invalidated by transitive inheritance dependency: Set(device.DeviceTop)
[debug] None of the modified names appears in source file of Generate.Top. This dependency is not being considered for invalidation.
[debug] Change NamesChange(device.DeviceTop,ModifiedNames(changes = UsedName(uart,[Default]))) invalidates 1 classes due to The device.DeviceTop has the following regular definitions changed:
[debug] 	UsedName(uart,[Default]).
[debug]   > by transitive inheritance: Set(device.DeviceTop)
[debug]   > 
[debug]   > 
[debug]         
[debug] Invalidating (transitively) by inheritance from device.UARTWrapper...
[debug] Initial set of included nodes: device.UARTWrapper
[debug] Invalidated by transitive inheritance dependency: Set(device.UARTWrapper)
[debug] The following modified names cause invalidation of device.DeviceTop: [UsedName(mmio,[Default]), UsedName(io,[Default]), UsedName(UARTWrapper,[Default]), UsedName(IO,[Default]), UsedName(board,[Default]), UsedName(device;UARTWrapper;init;,[Default])]
[debug] Change NamesChange(device.UARTWrapper,ModifiedNames(changes = UsedName(reifyTarget,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(_computeName,[Default]), UsedName(_component,[Default]), UsedName(notifyAll,[Default]), UsedName(device;UARTWrapper;init;,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(parentModName,[Default]), UsedName(getIds,[Default]), UsedName(nameIds,[Default]), UsedName(namePorts,[Default]), UsedName(_suggestNameCheck,[Default]), UsedName(toNamed,[Default]), UsedName(synchronized,[Default]), UsedName($init$,[Default]), UsedName(finalize,[Default]), UsedName(_namespace,[Default]), UsedName(clock,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getModulePorts,[Default]), UsedName(addId,[Default]), UsedName(parentPathName,[Default]), UsedName(generateComponent,[Default]), UsedName(instanceName,[Default]), UsedName(override_clock,[Default]), UsedName(setRef,[Default]), UsedName(board,[Default]), UsedName(hasSeed,[Default]), UsedName(getRef,[Default]), UsedName(portsSize,[Default]), UsedName(_closed,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(mkReset,[Default]), UsedName(_id,[Default]), UsedName(hashCode,[Default]), UsedName(_lastId,[Default]), UsedName(findPort,[Default]), UsedName(getPublicFields,[Default]), UsedName(notify,[Default]), UsedName(isClosed,[Default]), UsedName(clone,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(reifyParent,[Default]), UsedName(seedOpt,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(addCommand,[Default]), UsedName(_onModuleClose,[Default]), UsedName(_parent,[Default]), UsedName(reset,[Default]), UsedName(toTarget,[Default]), UsedName(getChiselPorts,[Default]), UsedName(initializeInParent,[Default]), UsedName(getCommands,[Default]), UsedName(mmio,[Default]), UsedName(circuitName,[Default]), UsedName(getOptionRef,[Default]), UsedName(forceName,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(eq,[Default]), UsedName(override_reset_=,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(autoSeed,[Default]), UsedName(portsContains,[Default]), UsedName(_circuit,[Default]), UsedName(name,[Default]), UsedName(compileOptions,[Default]), UsedName(override_reset,[Default]), UsedName(!=,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(forceFinalName,[Default]), UsedName(suggestName,[Default]), UsedName(override_clock_=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(IO,[Default]), UsedName(getTarget,[Default]), UsedName(io,[Default]), UsedName(desiredName,[Default]), UsedName(pathName,[Default]), UsedName(UARTWrapper,[Default]), UsedName(getPorts,[Default]), UsedName(wait,[Default]), UsedName(equals,[Default]))) invalidates 2 classes due to The device.UARTWrapper has the following regular definitions changed:
[debug] 	UsedName(reifyTarget,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(_computeName,[Default]), UsedName(_component,[Default]), UsedName(notifyAll,[Default]), UsedName(device;UARTWrapper;init;,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(parentModName,[Default]), UsedName(getIds,[Default]), UsedName(nameIds,[Default]), UsedName(namePorts,[Default]), UsedName(_suggestNameCheck,[Default]), UsedName(toNamed,[Default]), UsedName(synchronized,[Default]), UsedName($init$,[Default]), UsedName(finalize,[Default]), UsedName(_namespace,[Default]), UsedName(clock,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getModulePorts,[Default]), UsedName(addId,[Default]), UsedName(parentPathName,[Default]), UsedName(generateComponent,[Default]), UsedName(instanceName,[Default]), UsedName(override_clock,[Default]), UsedName(setRef,[Default]), UsedName(board,[Default]), UsedName(hasSeed,[Default]), UsedName(getRef,[Default]), UsedName(portsSize,[Default]), UsedName(_closed,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(mkReset,[Default]), UsedName(_id,[Default]), UsedName(hashCode,[Default]), UsedName(_lastId,[Default]), UsedName(findPort,[Default]), UsedName(getPublicFields,[Default]), UsedName(notify,[Default]), UsedName(isClosed,[Default]), UsedName(clone,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(reifyParent,[Default]), UsedName(seedOpt,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(addCommand,[Default]), UsedName(_onModuleClose,[Default]), UsedName(_parent,[Default]), UsedName(reset,[Default]), UsedName(toTarget,[Default]), UsedName(getChiselPorts,[Default]), UsedName(initializeInParent,[Default]), UsedName(getCommands,[Default]), UsedName(mmio,[Default]), UsedName(circuitName,[Default]), UsedName(getOptionRef,[Default]), UsedName(forceName,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(eq,[Default]), UsedName(override_reset_=,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(autoSeed,[Default]), UsedName(portsContains,[Default]), UsedName(_circuit,[Default]), UsedName(name,[Default]), UsedName(compileOptions,[Default]), UsedName(override_reset,[Default]), UsedName(!=,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(forceFinalName,[Default]), UsedName(suggestName,[Default]), UsedName(override_clock_=,[Default]), UsedName(asInstanceOf,[Default]), UsedName(IO,[Default]), UsedName(getTarget,[Default]), UsedName(io,[Default]), UsedName(desiredName,[Default]), UsedName(pathName,[Default]), UsedName(UARTWrapper,[Default]), UsedName(getPorts,[Default]), UsedName(wait,[Default]), UsedName(equals,[Default]).
[debug]   > by transitive inheritance: Set(device.UARTWrapper)
[debug]   > 
[debug]   > by member reference: Set(device.DeviceTop)
[debug]         
[debug] Invalidating (transitively) by inheritance from device.UART_IP...
[debug] Initial set of included nodes: device.UART_IP
[debug] Invalidated by transitive inheritance dependency: Set(device.UART_IP)
[debug] Change NamesChange(device.UART_IP,ModifiedNames(changes = UsedName(reifyTarget,[Default]), UsedName(s_axis_tvalid,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(_computeName,[Default]), UsedName(_component,[Default]), UsedName(notifyAll,[Default]), UsedName(rxd,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(parentModName,[Default]), UsedName(getIds,[Default]), UsedName(nameIds,[Default]), UsedName(rx_frame_error,[Default]), UsedName(namePorts,[Default]), UsedName(clk,[Default]), UsedName(_suggestNameCheck,[Default]), UsedName(toNamed,[Default]), UsedName(synchronized,[Default]), UsedName($init$,[Default]), UsedName(finalize,[Default]), UsedName(_namespace,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getModulePorts,[Default]), UsedName(addId,[Default]), UsedName(parentPathName,[Default]), UsedName(generateComponent,[Default]), UsedName(m_axis_tvalid,[Default]), UsedName(instanceName,[Default]), UsedName(setRef,[Default]), UsedName(hasSeed,[Default]), UsedName(tx_busy,[Default]), UsedName(getRef,[Default]), UsedName(portsSize,[Default]), UsedName(_closed,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(rx_overrun_error,[Default]), UsedName(_id,[Default]), UsedName(rst,[Default]), UsedName(hashCode,[Default]), UsedName(txd,[Default]), UsedName(_lastId,[Default]), UsedName(findPort,[Default]), UsedName(getPublicFields,[Default]), UsedName(notify,[Default]), UsedName(isClosed,[Default]), UsedName(clone,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(device;UART_IP;init;,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(params,[Default]), UsedName(reifyParent,[Default]), UsedName(seedOpt,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_onModuleClose,[Default]), UsedName(_parent,[Default]), UsedName(rx_busy,[Default]), UsedName(toTarget,[Default]), UsedName(UART_IP,[Default]), UsedName(getChiselPorts,[Default]), UsedName(initializeInParent,[Default]), UsedName(addResource,[Default]), UsedName(circuitName,[Default]), UsedName(getOptionRef,[Default]), UsedName(forceName,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(eq,[Default]), UsedName(s_axis_tready,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(autoSeed,[Default]), UsedName(portsContains,[Default]), UsedName(m_axis_tready,[Default]), UsedName(_circuit,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(forceFinalName,[Default]), UsedName(suggestName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(IO,[Default]), UsedName(getTarget,[Default]), UsedName(io,[Default]), UsedName(_io,[Default]), UsedName(desiredName,[Default]), UsedName(m_axis_tdata,[Default]), UsedName(pathName,[Default]), UsedName(prescale,[Default]), UsedName(s_axis_tdata,[Default]), UsedName(wait,[Default]), UsedName(equals,[Default]))) invalidates 1 classes due to The device.UART_IP has the following regular definitions changed:
[debug] 	UsedName(reifyTarget,[Default]), UsedName(s_axis_tvalid,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(_computeName,[Default]), UsedName(_component,[Default]), UsedName(notifyAll,[Default]), UsedName(rxd,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(parentModName,[Default]), UsedName(getIds,[Default]), UsedName(nameIds,[Default]), UsedName(rx_frame_error,[Default]), UsedName(namePorts,[Default]), UsedName(clk,[Default]), UsedName(_suggestNameCheck,[Default]), UsedName(toNamed,[Default]), UsedName(synchronized,[Default]), UsedName($init$,[Default]), UsedName(finalize,[Default]), UsedName(_namespace,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getModulePorts,[Default]), UsedName(addId,[Default]), UsedName(parentPathName,[Default]), UsedName(generateComponent,[Default]), UsedName(m_axis_tvalid,[Default]), UsedName(instanceName,[Default]), UsedName(setRef,[Default]), UsedName(hasSeed,[Default]), UsedName(tx_busy,[Default]), UsedName(getRef,[Default]), UsedName(portsSize,[Default]), UsedName(_closed,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(rx_overrun_error,[Default]), UsedName(_id,[Default]), UsedName(rst,[Default]), UsedName(hashCode,[Default]), UsedName(txd,[Default]), UsedName(_lastId,[Default]), UsedName(findPort,[Default]), UsedName(getPublicFields,[Default]), UsedName(notify,[Default]), UsedName(isClosed,[Default]), UsedName(clone,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(device;UART_IP;init;,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(params,[Default]), UsedName(reifyParent,[Default]), UsedName(seedOpt,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_onModuleClose,[Default]), UsedName(_parent,[Default]), UsedName(rx_busy,[Default]), UsedName(toTarget,[Default]), UsedName(UART_IP,[Default]), UsedName(getChiselPorts,[Default]), UsedName(initializeInParent,[Default]), UsedName(addResource,[Default]), UsedName(circuitName,[Default]), UsedName(getOptionRef,[Default]), UsedName(forceName,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(eq,[Default]), UsedName(s_axis_tready,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(autoSeed,[Default]), UsedName(portsContains,[Default]), UsedName(m_axis_tready,[Default]), UsedName(_circuit,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(forceFinalName,[Default]), UsedName(suggestName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(IO,[Default]), UsedName(getTarget,[Default]), UsedName(io,[Default]), UsedName(_io,[Default]), UsedName(desiredName,[Default]), UsedName(m_axis_tdata,[Default]), UsedName(pathName,[Default]), UsedName(prescale,[Default]), UsedName(s_axis_tdata,[Default]), UsedName(wait,[Default]), UsedName(equals,[Default]).
[debug]   > by transitive inheritance: Set(device.UART_IP)
[debug]   > 
[debug]   > 
[debug]         
[debug] Invalidating (transitively) by inheritance from device.uart...
[debug] Initial set of included nodes: device.uart
[debug] Invalidated by transitive inheritance dependency: Set(device.uart)
[debug] Change NamesChange(device.uart,ModifiedNames(changes = UsedName(reifyTarget,[Default]), UsedName(s_axis_tvalid,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(_computeName,[Default]), UsedName(_component,[Default]), UsedName(notifyAll,[Default]), UsedName(rxd,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(parentModName,[Default]), UsedName(getIds,[Default]), UsedName(nameIds,[Default]), UsedName(rx_frame_error,[Default]), UsedName(namePorts,[Default]), UsedName(clk,[Default]), UsedName(_suggestNameCheck,[Default]), UsedName(toNamed,[Default]), UsedName(synchronized,[Default]), UsedName($init$,[Default]), UsedName(finalize,[Default]), UsedName(_namespace,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getModulePorts,[Default]), UsedName(addId,[Default]), UsedName(parentPathName,[Default]), UsedName(generateComponent,[Default]), UsedName(m_axis_tvalid,[Default]), UsedName(instanceName,[Default]), UsedName(setRef,[Default]), UsedName(hasSeed,[Default]), UsedName(tx_busy,[Default]), UsedName(getRef,[Default]), UsedName(portsSize,[Default]), UsedName(_closed,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(rx_overrun_error,[Default]), UsedName(_id,[Default]), UsedName(rst,[Default]), UsedName(hashCode,[Default]), UsedName(txd,[Default]), UsedName(_lastId,[Default]), UsedName(findPort,[Default]), UsedName(getPublicFields,[Default]), UsedName(uart,[Default]), UsedName(notify,[Default]), UsedName(isClosed,[Default]), UsedName(clone,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(device;uart;init;,[Default]), UsedName(params,[Default]), UsedName(reifyParent,[Default]), UsedName(seedOpt,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_onModuleClose,[Default]), UsedName(_parent,[Default]), UsedName(rx_busy,[Default]), UsedName(toTarget,[Default]), UsedName(getChiselPorts,[Default]), UsedName(initializeInParent,[Default]), UsedName(addResource,[Default]), UsedName(circuitName,[Default]), UsedName(getOptionRef,[Default]), UsedName(forceName,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(eq,[Default]), UsedName(s_axis_tready,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(autoSeed,[Default]), UsedName(portsContains,[Default]), UsedName(m_axis_tready,[Default]), UsedName(_circuit,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(forceFinalName,[Default]), UsedName(suggestName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(IO,[Default]), UsedName(getTarget,[Default]), UsedName(io,[Default]), UsedName(_io,[Default]), UsedName(desiredName,[Default]), UsedName(m_axis_tdata,[Default]), UsedName(pathName,[Default]), UsedName(prescale,[Default]), UsedName(s_axis_tdata,[Default]), UsedName(wait,[Default]), UsedName(equals,[Default]))) invalidates 1 classes due to The device.uart has the following regular definitions changed:
[debug] 	UsedName(reifyTarget,[Default]), UsedName(s_axis_tvalid,[Default]), UsedName(_compatIoPortBound,[Default]), UsedName(toString,[Default]), UsedName(##,[Default]), UsedName(_computeName,[Default]), UsedName(_component,[Default]), UsedName(notifyAll,[Default]), UsedName(rxd,[Default]), UsedName(getClass,[Default]), UsedName(==,[Default]), UsedName(parentModName,[Default]), UsedName(getIds,[Default]), UsedName(nameIds,[Default]), UsedName(rx_frame_error,[Default]), UsedName(namePorts,[Default]), UsedName(clk,[Default]), UsedName(_suggestNameCheck,[Default]), UsedName(toNamed,[Default]), UsedName(synchronized,[Default]), UsedName($init$,[Default]), UsedName(finalize,[Default]), UsedName(_namespace,[Default]), UsedName(addAutoPostnameHook,[Default]), UsedName(closeUnboundIds,[Default]), UsedName(getModulePorts,[Default]), UsedName(addId,[Default]), UsedName(parentPathName,[Default]), UsedName(generateComponent,[Default]), UsedName(m_axis_tvalid,[Default]), UsedName(instanceName,[Default]), UsedName(setRef,[Default]), UsedName(hasSeed,[Default]), UsedName(tx_busy,[Default]), UsedName(getRef,[Default]), UsedName(portsSize,[Default]), UsedName(_closed,[Default]), UsedName(toAbsoluteTarget,[Default]), UsedName(rx_overrun_error,[Default]), UsedName(_id,[Default]), UsedName(rst,[Default]), UsedName(hashCode,[Default]), UsedName(txd,[Default]), UsedName(_lastId,[Default]), UsedName(findPort,[Default]), UsedName(getPublicFields,[Default]), UsedName(uart,[Default]), UsedName(notify,[Default]), UsedName(isClosed,[Default]), UsedName(clone,[Default]), UsedName(bindIoInPlace,[Default]), UsedName(_bindIoInPlace,[Default]), UsedName(device;uart;init;,[Default]), UsedName(params,[Default]), UsedName(reifyParent,[Default]), UsedName(seedOpt,[Default]), UsedName(forceAutoSeed,[Default]), UsedName(_onModuleClose,[Default]), UsedName(_parent,[Default]), UsedName(rx_busy,[Default]), UsedName(toTarget,[Default]), UsedName(getChiselPorts,[Default]), UsedName(initializeInParent,[Default]), UsedName(addResource,[Default]), UsedName(circuitName,[Default]), UsedName(getOptionRef,[Default]), UsedName(forceName,[Default]), UsedName(hasAutoSeed,[Default]), UsedName(_compatAutoWrapPorts,[Default]), UsedName(eq,[Default]), UsedName(s_axis_tready,[Default]), UsedName(ne,[Default]), UsedName(isInstanceOf,[Default]), UsedName(autoSeed,[Default]), UsedName(portsContains,[Default]), UsedName(m_axis_tready,[Default]), UsedName(_circuit,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName(addSuggestPostnameHook,[Default]), UsedName(forceFinalName,[Default]), UsedName(suggestName,[Default]), UsedName(asInstanceOf,[Default]), UsedName(IO,[Default]), UsedName(getTarget,[Default]), UsedName(io,[Default]), UsedName(_io,[Default]), UsedName(desiredName,[Default]), UsedName(m_axis_tdata,[Default]), UsedName(pathName,[Default]), UsedName(prescale,[Default]), UsedName(s_axis_tdata,[Default]), UsedName(wait,[Default]), UsedName(equals,[Default]).
[debug]   > by transitive inheritance: Set(device.uart)
[debug]   > 
[debug]   > 
[debug]         
[debug] New invalidations:
[debug] Initial set of included nodes: 
[debug] Previously invalidated, but (transitively) depend on new invalidations:
[debug] Final step, transitive dependencies:
[debug] 	Set()
[debug] No classes were invalidated.
[debug] Scala compilation took 4.0878022 s
[info] done compiling
