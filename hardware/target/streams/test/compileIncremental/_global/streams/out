[debug] [zinc] IncrementalCompile -----------
[debug] IncrementalCompile.incrementalCompile
[debug] previous = Stamps for: 16 products, 15 sources, 5 libraries
[debug] current source = Set(${BASE}/src/test/scala/core/utils/RAMTest.scala, ${BASE}/src/test/scala/core/writeBack/AUSelectorTest.scala, ${BASE}/src/test/scala/core/memory/MemoryDispatchTest.scala, ${BASE}/src/test/scala/core/execute/RegistersTest.scala, ${BASE}/src/test/scala/core/execute/ImmGenTest.scala, ${BASE}/src/test/scala/core/execute/NextPCGenTest.scala, ${BASE}/src/test/scala/core/decode/ControlUnitTest.scala, ${BASE}/src/test/scala/example/DFFTester.scala, ${BASE}/src/test/scala/core/execute/CMPTest.scala, ${BASE}/src/test/scala/example/DFFTester2.scala, ${BASE}/src/test/scala/core/decode/InstructionDecoderTest.scala, ${BASE}/src/test/scala/core/execute/ALUTest.scala, ${BASE}/src/test/scala/testutils/ValueUtils.scala, ${BASE}/src/test/scala/core/insFetch/PCTest.scala, ${BASE}/src/test/scala/core/writeBack/WriteDataSelectorTest.scala, ${BASE}/src/test/scala/core/execute/OperandSelectorTest.scala)
[debug] > initialChanges = InitialChanges(Changes(added = Set(${BASE}/src/test/scala/core/decode/InstructionDecoderTest.scala), removed = Set(), changed = Set(), unmodified = ...),Set(),Set(),API Changes: Set(NamesChange(core.writeBack.WriteDataSelector,ModifiedNames(changes = UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(WriteDataSelector,[Default]), UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(args,[Default]), UsedName(delayedInit,[Default]), UsedName(main,[Default]), UsedName(equals,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]))), NamesChange(core.writeBack.AUSelector,ModifiedNames(changes = UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(AUSelector,[Default]), UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(args,[Default]), UsedName(delayedInit,[Default]), UsedName(main,[Default]), UsedName(equals,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]))), NamesChange(core.decode.ControlUnit,ModifiedNames(changes = UsedName(==,[Default]), UsedName(ControlUnit,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(args,[Default]), UsedName(delayedInit,[Default]), UsedName(main,[Default]), UsedName(equals,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default])))))
[debug] The core.writeBack.WriteDataSelector has the following regular definitions changed:
[debug] 	UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(WriteDataSelector,[Default]), UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(args,[Default]), UsedName(delayedInit,[Default]), UsedName(main,[Default]), UsedName(equals,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]).
[debug] All member reference dependencies will be considered within this context.
[debug] Files invalidated by inheriting from (external) core.writeBack.WriteDataSelector: Set()
[debug] Now invalidating by inheritance (internally).
[debug] Getting direct dependencies of all classes transitively invalidated by inheritance.
[debug] Getting classes that directly depend on (external) core.writeBack.WriteDataSelector.
[debug] The following modified names cause invalidation of core.writeBack.WriteDataSelectorTest: [WriteDataSelector]
[debug] The core.writeBack.AUSelector has the following regular definitions changed:
[debug] 	UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(AUSelector,[Default]), UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(args,[Default]), UsedName(delayedInit,[Default]), UsedName(main,[Default]), UsedName(equals,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]).
[debug] All member reference dependencies will be considered within this context.
[debug] Files invalidated by inheriting from (external) core.writeBack.AUSelector: Set()
[debug] Now invalidating by inheritance (internally).
[debug] Getting direct dependencies of all classes transitively invalidated by inheritance.
[debug] Getting classes that directly depend on (external) core.writeBack.AUSelector.
[debug] The following modified names cause invalidation of core.writeBack.AUSelectorTest: [AUSelector]
[debug] The core.decode.ControlUnit has the following regular definitions changed:
[debug] 	UsedName(==,[Default]), UsedName(ControlUnit,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(args,[Default]), UsedName(delayedInit,[Default]), UsedName(main,[Default]), UsedName(equals,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]).
[debug] All member reference dependencies will be considered within this context.
[debug] Files invalidated by inheriting from (external) core.decode.ControlUnit: Set()
[debug] Now invalidating by inheritance (internally).
[debug] Getting direct dependencies of all classes transitively invalidated by inheritance.
[debug] Getting classes that directly depend on (external) core.decode.ControlUnit.
[debug] The following modified names cause invalidation of core.decode.ControlUnitTest: [ControlUnit]
[debug] 
[debug] Initial source changes:
[debug] 	removed: Set()
[debug] 	added: Set(${BASE}/src/test/scala/core/decode/InstructionDecoderTest.scala)
[debug] 	modified: Set()
[debug] Invalidated products: Set()
[debug] External API changes: API Changes: Set(NamesChange(core.writeBack.WriteDataSelector,ModifiedNames(changes = UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(WriteDataSelector,[Default]), UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(args,[Default]), UsedName(delayedInit,[Default]), UsedName(main,[Default]), UsedName(equals,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]))), NamesChange(core.writeBack.AUSelector,ModifiedNames(changes = UsedName(==,[Default]), UsedName($init$,[Default]), UsedName(AUSelector,[Default]), UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(args,[Default]), UsedName(delayedInit,[Default]), UsedName(main,[Default]), UsedName(equals,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]))), NamesChange(core.decode.ControlUnit,ModifiedNames(changes = UsedName(==,[Default]), UsedName(ControlUnit,[Default]), UsedName($init$,[Default]), UsedName(getClass,[Default]), UsedName(finalize,[Default]), UsedName(asInstanceOf,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(executionStart,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(eq,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(synchronized,[Default]), UsedName(clone,[Default]), UsedName(args,[Default]), UsedName(delayedInit,[Default]), UsedName(main,[Default]), UsedName(equals,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]))))
[debug] Modified binary dependencies: Set()
[debug] Initial directly invalidated classes: Set()
[debug] Sources indirectly invalidated by:
[debug] 	product: Set()
[debug] 	binary dep: Set()
[debug] 	external source: Set(core.writeBack.WriteDataSelectorTest, core.writeBack.AUSelectorTest, core.decode.ControlUnitTest)
[debug] All initially invalidated classes: Set(core.writeBack.WriteDataSelectorTest, core.writeBack.AUSelectorTest, core.decode.ControlUnitTest)
[debug] All initially invalidated sources:Set(${BASE}/src/test/scala/core/decode/InstructionDecoderTest.scala)
[debug] Initial set of included nodes: core.writeBack.WriteDataSelectorTest, core.writeBack.AUSelectorTest, core.decode.ControlUnitTest
[debug] compilation cycle 1
[info] compiling 4 Scala sources to D:\ComputerScience\Projects\CPUdemo\hardware\target\scala-2.12\test-classes ...
[debug] Getting org.scala-sbt:compiler-bridge_2.12:1.9.5:compile for Scala 2.12.12
[debug] [zinc] Running cached compiler 2bd15171 for Scala compiler version 2.12.12
[debug] [zinc] The Scala compiler is invoked with:
[debug] 	-Xplugin:C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\edu\berkeley\cs\chisel3-plugin_2.12.12\3.5.4\chisel3-plugin_2.12.12-3.5.4.jar
[debug] 	-bootclasspath
[debug] 	C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-library\2.12.12\scala-library-2.12.12.jar
[debug] 	-classpath
[debug] 	D:\ComputerScience\Projects\CPUdemo\hardware\target\scala-2.12\test-classes;D:\ComputerScience\Projects\CPUdemo\hardware\target\scala-2.12\classes;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\edu\berkeley\cs\chisel3_2.12\3.5.4\chisel3_2.12-3.5.4.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\edu\berkeley\cs\chiseltest_2.12\0.5.4\chiseltest_2.12-0.5.4.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\edu\berkeley\cs\chisel3-macros_2.12\3.5.4\chisel3-macros_2.12-3.5.4.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\edu\berkeley\cs\chisel3-core_2.12\3.5.4\chisel3-core_2.12-3.5.4.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\scala-reflect\2.12.12\scala-reflect-2.12.12.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\os-lib_2.12\0.8.0\os-lib_2.12-0.8.0.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\edu\berkeley\cs\treadle_2.12\1.5.4\treadle_2.12-1.5.4.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalatest\scalatest_2.12\3.1.4\scalatest_2.12-3.1.4.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\utest_2.12\0.7.9\utest_2.12-0.7.9.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\net\java\dev\jna\jna\5.10.0\jna-5.10.0.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\edu\berkeley\cs\firrtl_2.12\1.5.4\firrtl_2.12-1.5.4.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\lihaoyi\geny_2.12\0.7.0\geny_2.12-0.7.0.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\modules\scala-jline\2.12.1\scala-jline-2.12.1.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scalactic\scalactic_2.12\3.1.4\scalactic_2.12-3.1.4.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-lang\modules\scala-xml_2.12\1.2.0\scala-xml_2.12-1.2.0.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\scala-sbt\test-interface\1.0\test-interface-1.0.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\portable-scala\portable-scala-reflect_2.12\0.1.1\portable-scala-reflect_2.12-0.1.1.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\antlr\antlr4-runtime\4.9.3\antlr4-runtime-4.9.3.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\google\protobuf\protobuf-java\3.18.0\protobuf-java-3.18.0.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\github\scopt\scopt_2.12\3.7.1\scopt_2.12-3.7.1.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\net\jcazevedo\moultingyaml_2.12\0.4.2\moultingyaml_2.12-0.4.2.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\json4s\json4s-native_2.12\3.6.12\json4s-native_2.12-3.6.12.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\apache\commons\commons-text\1.9\commons-text-1.9.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\io\github\alexarchambault\data-class_2.12\0.2.5\data-class_2.12-0.2.5.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\fusesource\jansi\jansi\1.11\jansi-1.11.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\github\nscala-time\nscala-time_2.12\2.22.0\nscala-time_2.12-2.22.0.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\yaml\snakeyaml\1.26\snakeyaml-1.26.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\json4s\json4s-core_2.12\3.6.12\json4s-core_2.12-3.6.12.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\apache\commons\commons-lang3\3.11\commons-lang3-3.11.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\joda-time\joda-time\2.10.1\joda-time-2.10.1.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\joda\joda-convert\2.2.0\joda-convert-2.2.0.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\json4s\json4s-ast_2.12\3.6.12\json4s-ast_2.12-3.6.12.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\org\json4s\json4s-scalap_2.12\3.6.12\json4s-scalap_2.12-3.6.12.jar;C:\Users\86136\AppData\Local\Coursier\Cache\v1\https\repo1.maven.org\maven2\com\thoughtworks\paranamer\paranamer\2.8\paranamer-2.8.jar
[debug] Invalidating (transitively) by inheritance from core.decode.InstructionDecoderTest...
[debug] Initial set of included nodes: core.decode.InstructionDecoderTest
[debug] Invalidated by transitive inheritance dependency: Set(core.decode.InstructionDecoderTest)
[debug] Change NamesChange(core.decode.InstructionDecoderTest,ModifiedNames(changes = UsedName(InstructionDecoderTest,[Default]), UsedName(info,[Default]), UsedName(ValueWord,[Default]), UsedName(atLeastOneOf,[Default]), UsedName(convertToStringShouldWrapper,[Implicit]), UsedName(topFileName,[Default]), UsedName(InAndIgnoreMethods,[Default]), UsedName(theSameElementsAs,[Default]), UsedName(contain,[Default]), UsedName(ResultOfIncludeWordForCollectedString,[Default]), UsedName(AnyShouldWrapper,[Default]), UsedName(after,[Default]), UsedName(atLeast,[Default]), UsedName(defaultEquality,[Default]), UsedName(ignore,[Default]), UsedName(run,[Default]), UsedName(==,[Default]), UsedName(assert,[Default]), UsedName(ResultOfCollectedAny,[Default]), UsedName(convertToInAndIgnoreMethods,[Implicit]), UsedName(oneElementOf,[Default]), UsedName(getExpectDetailedTrace,[Default]), UsedName(scalaTestContext,[Default]), UsedName(RegexWrapper,[Default]), UsedName(outputs,[Default]), UsedName(convertEquivalenceToBToAConstraint,[Default]), UsedName(withFixture,[Default]), UsedName(fail,[Default]), UsedName(lowPriorityConversionCheckedConstraint,[Default]), UsedName(ResultOfEndWithWordForString,[Default]), UsedName(execute$default$2,[Default]), UsedName(ResultOfStartWithWordForString,[Default]), UsedName(>,[Default]), UsedName(succeed,[Default]), UsedName(TheyVerbStringTaggedAs,[Default]), UsedName(ResultOfBeWordForAny,[Default]), UsedName(checkpoint,[Default]), UsedName(createCatchReporter,[Default]), UsedName(markup,[Default]), UsedName(oneOf,[Default]), UsedName(key,[Default]), UsedName(sorted,[Default]), UsedName(defined,[Default]), UsedName(between,[Default]), UsedName(inOrder,[Default]), UsedName(noneOf,[Default]), UsedName($init$,[Default]), UsedName(include,[Default]), UsedName(batchedFailures,[Default]), UsedName(convertEquivalenceToAToBConversionConstraint,[Default]), UsedName(getTestName,[Default]), UsedName(alert,[Default]), UsedName(newTestCanceledException,[Default]), UsedName(nestedSuites,[Default]), UsedName(theSameInstanceAs,[Default]), UsedName(determined,[Default]), UsedName(CheckingEqualizer,[Default]), UsedName(convertToInAndIgnoreMethodsAfterTaggedAs,[Implicit]), UsedName(getClass,[Default]), UsedName(ResultOfIncludeWordForString,[Default]), UsedName(AWord,[Default]), UsedName(assertTypeError,[Default]), UsedName(thrownBy,[Default]), UsedName(be,[Default]), UsedName(fullyMatch,[Default]), UsedName(execute$default$4,[Default]), UsedName(behavior,[Default]), UsedName(ResultOfFullyMatchWordForCollectedString,[Default]), UsedName(message,[Default]), UsedName(ResultOfFullyMatchWordForString,[Default]), UsedName(theSameElementsInOrderAs,[Default]), UsedName(testerFail,[Default]), UsedName(allElementsOf,[Default]), UsedName(finalize,[Default]), UsedName(Equalizer,[Default]), UsedName(convertSymbolToHavePropertyMatcherGenerator,[Implicit]), UsedName(asInstanceOf,[Default]), UsedName(all,[Default]), UsedName(every,[Default]), UsedName(execute$default$7,[Default]), UsedName(writable,[Default]), UsedName(atMost,[Default]), UsedName(inOrderOnly,[Default]), UsedName(convertEquivalenceToAToBConstraint,[Default]), UsedName(DecidedWord,[Default]), UsedName(notify,[Default]), UsedName(ne,[Default]), UsedName(assertThrows,[Default]), UsedName(<,[Default]), UsedName(##,[Default]), UsedName(execute,[Default]), UsedName(===,[Default]), UsedName(convertNumericToPlusOrMinusWrapper,[Implicit]), UsedName(hashCode,[Default]), UsedName(matchPattern,[Default]), UsedName(compile,[Default]), UsedName(ResultOfHaveWordForCollectedExtent,[Default]), UsedName(decided,[Default]), UsedName(pending,[Default]), UsedName(equal,[Default]), UsedName(convertToStringCanWrapper,[Implicit]), UsedName(they,[Default]), UsedName(wait,[Default]), UsedName(exist,[Default]), UsedName(note,[Default]), UsedName(eq,[Default]), UsedName(runNestedSuites,[Default]), UsedName(not,[Default]), UsedName(toString,[Default]), UsedName(isInstanceOf,[Default]), UsedName(endWith,[Default]), UsedName(synchronized,[Default]), UsedName(behave,[Default]), UsedName(ResultOfEndWithWordForCollectedString,[Default]), UsedName(registerTest,[Default]), UsedName(pendingUntilFixed,[Default]), UsedName(of,[Default]), UsedName(cancel,[Default]), UsedName(assertResult,[Default]), UsedName(IgnoreWord,[Default]), UsedName(registerIgnoredTest,[Default]), UsedName(value,[Default]), UsedName(clone,[Default]), UsedName(DeterminedByEquivalence,[Default]), UsedName(shorthandSharedTestRegistrationFunction,[Implicit]), UsedName(ResultOfBeWordForCollectedAny,[Default]), UsedName(TheyWord,[Default]), UsedName(shorthandTestRegistrationFunction,[Implicit]), UsedName(allOf,[Default]), UsedName(testDataFor,[Default]), UsedName(IgnoreVerbStringTaggedAs,[Default]), UsedName(atMostOneOf,[Default]), UsedName(assume,[Default]), UsedName(HavePropertyMatcherGenerator,[Default]), UsedName(<=,[Default]), UsedName(startWith,[Default]), UsedName(runTests,[Default]), UsedName(convertToEqualizer,[Implicit]), UsedName(definedAt,[Default]), UsedName(convertEquivalenceToBToAConversionConstraint,[Default]), UsedName(rerunner,[Default]), UsedName(noElementsOf,[Default]), UsedName(execute$default$3,[Default]), UsedName(inOrderElementsOf,[Default]), UsedName(DecidedByEquality,[Default]), UsedName(atMostOneElementOf,[Default]), UsedName(StringCanWrapperForVerb,[Default]), UsedName(convertToStringShouldWrapperForVerb,[Implicit]), UsedName(no,[Default]), UsedName(BehaviorWord,[Default]), UsedName(expectedTestCount,[Default]), UsedName(ItWord,[Default]), UsedName(newAssertionFailedException,[Default]), UsedName(conversionCheckedConstraint,[Default]), UsedName(convertToRegexWrapper,[Implicit]), UsedName(test,[Default]), UsedName(TestBuilder,[Default]), UsedName(convertToCheckingEqualizer,[Default]), UsedName(suiteId,[Default]), UsedName(ResultOfHaveWordForExtent,[Default]), UsedName(execute$default$6,[Default]), UsedName(assertDoesNotCompile,[Default]), UsedName(TheSameInstanceAsPhrase,[Default]), UsedName(empty,[Default]), UsedName(ResultOfBeWordForCollectedArray,[Default]), UsedName(typeCheckedConstraint,[Default]), UsedName(ItVerbStringTaggedAs,[Default]), UsedName(TheyVerbString,[Default]), UsedName(have,[Default]), UsedName(core;decode;InstructionDecoderTest;init;,[Default]), UsedName(assertCompiles,[Default]), UsedName(ResultOfContainWordForCollectedAny,[Default]), UsedName(execute$default$1,[Default]), UsedName(AnWord,[Default]), UsedName(convertToAnyShouldWrapper,[Implicit]), UsedName(KeyWord,[Default]), UsedName(TheAfterWord,[Default]), UsedName(suiteName,[Default]), UsedName(StringShouldWrapper,[Default]), UsedName(atLeastOneElementOf,[Default]), UsedName(runTest,[Default]), UsedName(StringShouldWrapperForVerb,[Default]), UsedName(a,[Default]), UsedName(IgnoreVerbString,[Default]), UsedName(RegexWord,[Default]), UsedName(ResultOfStartWithWordForCollectedString,[Default]), UsedName(tags,[Default]), UsedName(unconstrainedEquality,[Implicit]), UsedName(>=,[Default]), UsedName(StringMustWrapperForVerb,[Default]), UsedName(testDataFor$default$2,[Default]), UsedName(styleName,[Default]), UsedName(readable,[Default]), UsedName(NoArgTest,[Default]), UsedName(withClue,[Default]), UsedName(only,[Default]), UsedName(Collected,[Default]), UsedName(size,[Default]), UsedName(execute$default$5,[Default]), UsedName(ItVerbString,[Default]), UsedName(the,[Default]), UsedName(regex,[Default]), UsedName(it,[Default]), UsedName(an,[Default]), UsedName(DeterminedWord,[Default]), UsedName(inputs,[Default]), UsedName(InAndIgnoreMethodsAfterTaggedAs,[Default]), UsedName(intercept,[Default]), UsedName(lowPriorityTypeCheckedConstraint,[Default]), UsedName(equals,[Default]), UsedName(!=,[Default]), UsedName(notifyAll,[Default]), UsedName(length,[Default]), UsedName(convertToStringMustWrapperForVerb,[Implicit]), UsedName(noException,[Default]), UsedName(typeCheck,[Default]), UsedName(signalExpectFailure,[Default]), UsedName(testNames,[Default]), UsedName(PlusOrMinusWrapper,[Default]), UsedName(ResultOfNotWordForCollectedAny,[Default]), UsedName(!==,[Default]), UsedName(exactly,[Default]), UsedName(doCollected,[Default]))) invalidates 1 classes due to The core.decode.InstructionDecoderTest has the following implicit definitions changed:
[debug] 	UsedName(convertToStringShouldWrapper,[Implicit]), UsedName(convertToInAndIgnoreMethods,[Implicit]), UsedName(convertToInAndIgnoreMethodsAfterTaggedAs,[Implicit]), UsedName(convertSymbolToHavePropertyMatcherGenerator,[Implicit]), UsedName(convertNumericToPlusOrMinusWrapper,[Implicit]), UsedName(convertToStringCanWrapper,[Implicit]), UsedName(shorthandSharedTestRegistrationFunction,[Implicit]), UsedName(shorthandTestRegistrationFunction,[Implicit]), UsedName(convertToEqualizer,[Implicit]), UsedName(convertToStringShouldWrapperForVerb,[Implicit]), UsedName(convertToRegexWrapper,[Implicit]), UsedName(convertToAnyShouldWrapper,[Implicit]), UsedName(unconstrainedEquality,[Implicit]), UsedName(convertToStringMustWrapperForVerb,[Implicit]).
[debug]   > by transitive inheritance: Set(core.decode.InstructionDecoderTest)
[debug]   > 
[debug]   > 
[debug]         
[debug] New invalidations:
[debug] Initial set of included nodes: 
[debug] Previously invalidated, but (transitively) depend on new invalidations:
[debug] Final step, transitive dependencies:
[debug] 	Set()
[debug] No classes were invalidated.
[debug] Scala compilation took 1.4314127 s
[info] done compiling
